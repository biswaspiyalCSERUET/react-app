{"version":3,"sources":["reducers.ts","components/Navbar.tsx","components/Home.tsx","components/Product.tsx","components/Cart.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Types","NavBar","history","useHistory","className","to","push","productReducer","state","action","type","Create","id","payload","title","price","picture","count","Delete","filter","product","Increase","map","withRouter","useState","items","setItems","subtotal","setSubtotal","dropDwonValue","setDropDwonValue","React","useContext","userContext","dispatch","useEffect","axios","get","then","res","data","calculateSubTotal","sTotal","i","products","length","addToCart","record","_id","DropdownButton","alignRight","onSelect","e","console","log","sorted","sort","a","b","sortAscending","sortDescending","style","float","position","right","Dropdown","Item","eventKey","key","Card","Img","variant","src","Body","textAlign","Title","pathname","foo","Text","description","stock","Footer","left","color","marginLeft","onClick","fontSize","borderBottom","fontFamily","fontWeight","recordid","marginRight","props","setCount","location","height","width","padding","borderWidth","borderStyle","Table","striped","bordered","hover","size","colSpan","Button","paddingLeft","paddingRight","initialState","mainReducer","createContext","Routing","exact","path","App","useReducer","Provider","value","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.85b6268b.chunk.js","sourcesContent":["import React, { createContext, useReducer } from 'react';\ntype ActionMap<M extends { [index: string]: any }> = {\n    [Key in keyof M]: M[Key] extends undefined\n    ? {\n        type: Key;\n    }\n    : {\n        type: Key;\n        payload: M[Key];\n    }\n};\n\n\nexport enum Types {\n    Create = 'CREATE_PRODUCT',\n    Delete = 'DELETE_PRODUCT',\n    Increase = 'INCREASE_PRODUCT',\n    // Decrease = 'DECREASE_PRODUCT'\n}\n\ntype ProductType = {\n    id: number\n    title: string\n    price: number\n    count: number\n    picture: string\n}\n\ntype ProductPayload = {\n    [Types.Create]: {\n        id: number;\n        title: string;\n        price: number;\n        picture: string;\n        count: number;\n    };\n    [Types.Delete]: {\n        id: number;\n    };\n    [Types.Increase]: {\n        id: number;\n    }\n}\n\n\nexport type ProductActions = ActionMap<ProductPayload>[keyof ActionMap<ProductPayload>];\n\n\n\nexport const productReducer = (state, action) => {\n    switch (action.type) {\n        case Types.Create:\n            return [\n                ...state,\n                {\n                    id: action.payload.id,\n                    title: action.payload.title,\n                    price: action.payload.price,\n                    picture: action.payload.picture,\n                    count: action.payload.count\n                }\n            ]\n        case Types.Delete:\n            return [\n                ...state.filter(product => product.id !== action.payload.id)\n            ]\n        case Types.Increase:\n            return [\n                ...state.map(product =>\n                    product.id === action.payload.id\n                        ? { ...product, count: product.count + 1 }\n                        :\n                        product\n                )\n            ]\n        default:\n            return state;\n    }\n};\n\n\n// export const productReducer = (state, action) => {\n//     switch (action.type) {\n//         case 'CREATE_PRODUCT':\n//             return [\n//                 ...state,\n//                 {\n//                     id: action.payload.id,\n//                     title: action.payload.title,\n//                     price: action.payload.price,\n//                     picture: action.payload.picture,\n//                     count: 1\n//                 }\n//             ]\n//         case 'DELETE_PRODUCT':\n//             return [\n//                 ...state.filter(product => product.id !== action.payload.id),\n//             ]\n//         // case 'INCREASE_PRODUCT':\n//         //     return [\n//         //         ...state,\n//         //         {\n//         //             count: action.count + 1\n//         //         }\n//         //     ]\n//         // case 'DECREASE_PRODUCT':\n//         //     if (state.quantity > 0) {\n//         //         return {\n//         //             ...state,\n//         //             count: action.count - 1\n//         //         };\n//         //     }\n//         default:\n//             return state;\n//     }\n// }\n\n\n","import React from 'react'\nimport { Link, useHistory } from 'react-router-dom'\n\nconst NavBar = () => {\n    const history = useHistory()\n    return (\n        <div className=\"norm\">\n            <div className=\"nav-wrapper white\">\n                <Link to=\"/\" className=\"cus \">Shopping Cart</Link>\n                {history.push(\"/\")}\n            </div>\n        </div>\n    )\n}\n\nexport default NavBar","import React, { useEffect, useState, useContext } from 'react'\nimport { Card } from 'react-bootstrap'\nimport axios from 'axios';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport { userContext } from '../App'\nimport { Types } from '../reducers';\n\nimport { Link, withRouter } from 'react-router-dom'\n\nconst Home = () => {\n\n    const [items, setItems] = useState<any[]>([])\n    const [subtotal, setSubtotal] = useState(0)\n    const [dropDwonValue, setDropDwonValue] = useState(\"Default Sorting\")\n    const { state, dispatch } = React.useContext(userContext);\n\n    useEffect(() => {\n        axios.get('https://gist.githubusercontent.com/naieem/c138ff1f12847b2a1b8ad85866426d3d/raw/037825eee126d589ab3e1fff6c3d0119f33f3b5b/Products?fbclid=IwAR0Ls3YK0ruoAT5VkgaFy0jfGN-BmjbKZEVMDXw1ekT5nQMrLIZ_yTN2Pmc')\n            .then(res => {\n                //console.log(res.data)\n                setItems(res.data)\n            })\n    }, [])\n\n\n    useEffect(() => {\n        calculateSubTotal()\n    }, [state])\n\n\n    const sortDescending = () => {\n        const sorted = items.sort((a, b) => a[\"price\"] - b[\"price\"])\n        //console.log(sorted)\n        setItems(sorted)\n    }\n\n    const sortAscending = () => {\n        const sorted = items.sort((a, b) => b[\"price\"] - a[\"price\"])\n        //console.log(sorted)\n        setItems(sorted)\n    }\n\n\n    const handleSelect = (e) => {\n        console.log(e);\n        //setValue(e)\n        setDropDwonValue(e)\n\n        if (e === \"Ascending\") {\n            sortAscending()\n        }\n        else if (e === \"Descending\") {\n            sortDescending()\n        }\n\n    }\n\n    const calculateSubTotal = () => {\n        let sTotal = 0\n        for (let i = 0; i < state.products.length; i++) {\n            sTotal = sTotal + state.products[i].price * state.products[i].count\n        }\n        //console.log(sTotal)\n        setSubtotal(sTotal)\n    }\n\n    const addToCart = (record) => {\n        //console.log(record)\n\n        for (let i = 0; i < state.products.length; i++) {\n            if (state.products[i].id === record._id) {\n                dispatch({\n                    type: Types.Increase,\n                    payload: {\n                        id: record._id,\n                    }\n                });\n\n                //console.log(\"Got One Bye\")\n\n                return;\n            }\n        }\n\n        dispatch({\n            type: Types.Create,\n            payload: {\n                id: record._id,\n                title: record.title,\n                price: record.price,\n                picture: record.picture,\n                count: 1\n            }\n        });\n\n\n        //console.log(state)\n    }\n\n    const removeToCart = (recordid) => {\n        //console.log(record)\n        dispatch({\n            type: Types.Delete,\n            payload: {\n                id: recordid\n            }\n        })\n\n        //console.log(state)\n    }\n\n\n\n\n\n\n\n    return (\n        <>\n            {items ?\n                <div>\n\n                    <div className=\"container\">\n                        <div className=\"row site-section\">\n                            <div className=\"col-md-9\">\n\n                                <h1>Shop</h1>\n\n                                <DropdownButton\n                                    alignRight\n                                    title={dropDwonValue}\n                                    id=\"dropdown-menu-align-right\"\n                                    onSelect={handleSelect}\n                                    style={{ float: \"right\", position: \"absolute\", right: \"0px\" }}\n                                >\n                                    <Dropdown.Item eventKey=\"Ascending\">Ascending</Dropdown.Item>\n                                    <Dropdown.Item eventKey=\"Descending\">Descending</Dropdown.Item>\n                                </DropdownButton>\n                                <br></br>\n                                <br></br>\n                                <br></br>\n\n\n                                {\n                                    items.map(record => {\n                                        return (\n                                            <div key={record._id}>\n                                                <Card>\n                                                    <Card.Img variant=\"top\" src={record.picture} />\n                                                    <Card.Body style={{ textAlign: \"center\" }}>\n                                                        <Card.Title className=\"btn\"\n                                                        ><Link to={{\n                                                            pathname: '/product/' + record._id,\n                                                            state: { foo: record }\n                                                        }}>{record.title} </Link></Card.Title>\n                                                        <Card.Text>\n                                                            {record.description}\n                                                        </Card.Text>\n                                                        <Card.Text>\n                                                            ${record.price}\n                                                        </Card.Text>\n                                                        <Card.Text>\n                                                            Available prdoucts: {record.stock}\n                                                        </Card.Text>\n                                                    </Card.Body>\n                                                    <Card.Footer className=\"align-items-center\" >\n                                                        <i className=\"material-icons\"\n                                                            style={{ float: \"left\", position: \"absolute\", left: \"0px\", color: \"red\", marginLeft: \"5px\" }}\n                                                            onClick={() => { addToCart(record) }}\n                                                        >add_shopping_cart</i> <small className=\"btn\" onClick={() => { addToCart(record) }} style={{ marginLeft: \"10px\", fontSize:\"large\" }}>  Add to cart</small>\n\n                                                        {\n                                                            state.products.map(product => (\n                                                                product.id === record._id\n                                                                    ? <span key={product.id}>\n                                                                        <i className=\"material-icons\"\n                                                                            style={{ position: \"relative\", left: \"0px\", color: \"grey\", marginLeft: \"0px\" }}\n                                                                            \n                                                                        >check</i>\n\n                                                                        <span className=\"btn btn-secondary\" key={product.id} style={{ marginLeft: \"20px\" }}><Link style={{ color: \"white\" }} to={{\n                                                                            pathname: '/cart'\n                                                                        }}> View cart</Link></span>\n\n                                                                    </span>\n                                                                    :\n                                                                    <span key={product.id}></span>\n                                                            ))\n                                                        }\n                                                    </Card.Footer>\n                                                </Card>\n                                                <br></br>\n                                            </div>\n                                        )\n                                    })\n                                }\n\n                            </div>\n                            <div className=\"col-md-3\">\n                                <h1>Cart</h1>\n                                {\n                                    state.products.length > 0 ?\n                                        <div>\n                                            {state.products.map(record => (\n                                                <div className=\"Comment-user\" key={record.id} style={{ borderBottom: \"1px solid blue\" }}>\n                                                    <div>\n                                                        <div className=\"Comment-user-avatar\">\n                                                            <img src={record.picture} />\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"Comment-user-nickname\" >\n\n                                                        <span style={{ fontFamily: \"'PT Sans', sans-serif\", fontWeight: \"bold\" }}>{record.title}</span>\n\n                                                        <br></br>\n                                                        {record.count} x ${record.price}\n                                                        <i className=\"material-icons\"\n                                                            style={{ float: \"right\", position: \"absolute\", right: \"0px\", color: \"red\" }}\n                                                            onClick={() => { removeToCart(record.id) }}\n                                                        >delete</i>\n\n                                                    </div>\n\n                                                </div>\n                                            ))}\n                                            <br></br>\n\n                                            <span style={{ fontWeight: \"bolder\", fontSize: \"small\" }}>Subtotal: ${subtotal}</span>\n\n                                            <br></br>\n\n                                            <div className=\"btn btn-secondary\" style={{ marginRight: \"10px\" }}><Link style={{ color: \"white\" }} to={{\n                                                pathname: '/cart'\n                                            }}> View cart</Link></div>\n\n                                            <div className=\"btn btn-secondary\">Checkout</div>\n                                        </div>\n                                        : <h4>No products in the cart</h4>\n                                }\n                            </div>\n\n                        </div>\n\n\n                    </div>\n                </div >\n\n                :\n                <h2>Loading......</h2>\n            }\n        </>\n\n    )\n}\n\nexport default withRouter(Home)","import React, { useContext, useState, useEffect } from 'react'\n\nimport { userContext } from '../App'\nimport { Link, withRouter } from 'react-router-dom';\nimport { Types } from '../reducers';\nconst Product = (props) => {\n    const { state, dispatch } = useContext(userContext);\n    const [subtotal, setSubtotal] = useState(0)\n\n    const [count, setCount] = useState(0)\n\n    //console.log(state)\n    const { foo } = props.location.state\n    //console.log(foo)\n\n\n\n\n    useEffect(() => {\n        calculateSubTotal()\n    }, [state])\n\n\n    const calculateSubTotal = () => {\n        let sTotal = 0\n        for (let i = 0; i < state.products.length; i++) {\n            sTotal = sTotal + state.products[i].price * state.products[i].count\n            if (state.products[i].id === foo._id) {\n                setCount(state.products[i].count)\n            }\n        }\n        //console.log(sTotal)\n        setSubtotal(sTotal)\n    }\n\n    const addToCart = (record) => {\n        //console.log(record)\n\n        for (let i = 0; i < state.products.length; i++) {\n            if (state.products[i].id === record._id) {\n                dispatch({\n                    type: Types.Increase,\n                    payload: {\n                        id: record._id,\n                    }\n                });\n\n                //console.log(\"Got One Bye\")\n\n                return;\n            }\n        }\n\n        dispatch({\n            type: Types.Create,\n            payload: {\n                id: record._id,\n                title: record.title,\n                price: record.price,\n                picture: record.picture,\n                count: 1\n            }\n        });\n\n\n        //console.log(state)\n    }\n\n\n\n    const removeToCart = (recordid) => {\n        //console.log(record)\n        dispatch({\n            type: Types.Delete,\n            payload: {\n                id: recordid\n            }\n        })\n        setCount(0)\n        //console.log(state)\n    }\n    return (\n        <div className=\"container\">\n            <div className=\"row site-section\">\n                <div className=\"col-md-9\">\n\n                    <div className=\"row site-section\" style={{ borderBottom: \"1px solid blue\" }}>\n                        <div className=\"col-md-8\">\n                            <img style={{ height: \"400px\", width: \"400px\" }} src={foo.picture}></img>\n\n                        </div>\n\n                        <div className=\"col-md-4\">\n                            <h1>{foo.title}</h1>\n                            <h4>${foo.price}</h4>\n                            <p>{foo.description}</p>\n                            <span style={{  padding:\"7px\", borderWidth: \"1px\", borderStyle: \"solid\", fontSize:\"small\" }}>\n                                {count}\n\n                            </span>\n\n                            <span className=\"btn btn-secondary\" onClick={() => { addToCart(foo) }} style={{ marginLeft: \"10px\", fontSize: \"large\" }}>  Add to cart</span>\n\n\n                        </div>\n\n                    </div>\n\n\n                    <br></br>\n\n                    <div className=\"row\">\n                        <h1>Description</h1>\n                        <p>{foo.description}</p>\n\n                    </div>\n\n\n\n\n                </div>\n\n                <div className=\"col-md-3\">\n                    <h1>Cart</h1>\n                    {\n                        state.products.length > 0 ?\n                            <div>\n                                {state.products.map(record => (\n                                    <div className=\"Comment-user\" key={record.id} style={{ borderBottom: \"1px solid blue\" }}>\n                                        <div>\n                                            <div className=\"Comment-user-avatar\">\n                                                <img src={record.picture} />\n                                            </div>\n                                        </div>\n                                        <div className=\"Comment-user-nickname\" >\n\n                                            <span style={{ fontFamily: \"'PT Sans', sans-serif\", fontWeight: \"bold\" }}>{record.title}</span>\n\n                                            <br></br>\n                                            {record.count} x ${record.price}\n                                            <i className=\"material-icons\"\n                                                style={{ float: \"right\", position: \"absolute\", right: \"0px\", color: \"red\" }}\n                                                onClick={() => { removeToCart(record.id) }}\n                                            >delete</i>\n                                        </div>\n                                    </div>\n                                ))}\n                                <br></br>\n\n                                <span style={{ fontWeight: \"bolder\", fontSize: \"small\" }}>Subtotal: ${subtotal}</span>\n\n                                <br></br>\n\n                                <div className=\"btn btn-secondary\" style={{ marginRight: \"10px\" }}><Link style={{ color: \"white\" }} to={{\n                                    pathname: '/cart'\n                                }}> View cart</Link></div>\n\n                                <div className=\"btn btn-secondary\">Checkout</div>\n                            </div>\n                            : <h4>No products in the cart</h4>\n                    }\n                </div>\n\n\n\n\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(Product)","import React, { useContext, useState, useEffect } from 'react'\nimport { Table, Button } from 'react-bootstrap';\nimport { userContext } from '../App'\nimport { withRouter } from 'react-router-dom';\nimport { Types } from '../reducers';\nconst Cart = (props) => {\n    const { state, dispatch } = useContext(userContext);\n    const [subtotal, setSubtotal] = useState(0)\n    //console.log(state)\n\n    useEffect(() => {\n        calculateSubTotal()\n    }, [state])\n\n    const calculateSubTotal = () => {\n        let sTotal = 0\n        for (let i = 0; i < state.products.length; i++) {\n            sTotal = sTotal + state.products[i].price * state.products[i].count\n        }\n        //console.log(sTotal)\n        setSubtotal(sTotal)\n    }\n\n    const removeToCart = (recordid) => {\n        //console.log(record)\n        dispatch({\n            type: Types.Delete,\n            payload: {\n                id: recordid\n            }\n        })\n\n        //console.log(state)\n    }\n\n    return (\n        <div className=\"container\">\n            <h1>Cart View</h1>\n\n            <Table striped bordered hover size=\"lg\">\n                <thead>\n                    <tr>\n                        <th></th>\n                        <th></th>\n                        <th style={{ textAlign: \"center\", fontSize: \"x-large\" }}>Product</th>\n                        <th style={{ textAlign: \"center\", fontSize: \"x-large\" }}>Price</th>\n                        <th style={{ textAlign: \"center\", fontSize: \"x-large\" }}>Quantity</th>\n                        <th style={{ textAlign: \"center\", fontSize: \"x-large\" }}>Subtotal</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        state.products.map(product => (\n                            <tr key={product.id}>\n                                <td > <i className=\"material-icons\"\n                                    style={{ color: \"red\" }}\n                                    onClick={() => { removeToCart(product.id) }}\n                                >delete</i></td>\n                                <td style={{ textAlign: \"center\" }}><div className=\"Comment-user-avatar\">\n                                    <img src={product.picture} />\n                                </div></td>\n                                <td className=\"text-primary\" style={{ textAlign: \"center\", fontSize: \"x-large\" }}>{product.title}</td>\n                                <td style={{ textAlign: \"center\", fontSize: \"x-large\" }}>${product.price}</td>\n                                <td style={{ textAlign: \"center\", fontSize: \"x-large\" }}>{product.count}</td>\n                                <td style={{ textAlign: \"center\", fontSize: \"x-large\" }}>${product.price * product.count}</td>\n                            </tr>\n                        ))\n                    }\n                    <tr key=\"0\">\n                        <td colSpan={6} style={{ textAlign: \"right\", fontSize: \"x-large\" }}> <Button variant=\"secondary\" size=\"lg\">Update Cart</Button> </td>\n                    </tr>\n                </tbody>\n            </Table>\n\n            <br></br>\n            <br></br>\n\n            <div className=\"row\">\n                <div style={{ height: \"300px\" }} className=\"col-md-10 offset-md-6\">\n                    <div className=\"row border align-items-center\" key=\"1\" style={{ height: \"100px\", fontSize: \"x-large\", paddingLeft: \"10px\", paddingRight: \"30px\" }}>\n                        <span style={{ paddingRight: \"15px\", fontWeight: \"bolder\", color:\"gray\" }}>Subtotal</span>\n                        <span style={{ fontWeight: \"lighter\" }}>${subtotal}</span>\n\n                    </div>\n                    <div className=\"row border align-items-center\" key=\"2\" style={{ height: \"150px\", fontSize: \"x-large\", paddingLeft: \"10px\", paddingRight: \"30px\" }}>\n                        <span style={{ paddingRight: \"15px\", fontWeight: \"bolder\", color:\"gray\" }}>Shipping</span>\n                        <span style={{ fontWeight: \"lighter\" }}>Free Shipping <br></br>Shipping options will be updated during checkout </span>\n\n                    </div>\n                    <div className=\"row border align-items-center\" key=\"3\" style={{ height: \"100px\", fontSize: \"x-large\", paddingLeft: \"10px\", paddingRight: \"30px\" }}>\n                        <span style={{ paddingRight: \"60px\", fontWeight: \"bolder\", color:\"gray\" }}>Total</span>\n                        <span style={{ fontWeight: \"lighter\" }}>${subtotal}</span>\n\n                    </div>\n                </div>\n            </div>\n\n\n\n\n\n\n        </div>\n    )\n}\n\nexport default withRouter(Cart)","import React, { useEffect, createContext, useReducer, useContext } from 'react'\nimport NavBar from './components/Navbar'\nimport \"./App.css\"\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Home from './components/Home'\nimport Product from './components/Product'\nimport Cart from './components/Cart'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { productReducer } from './reducers'\n\ntype ProductType = {\n  id: number\n  title: string\n  price: number\n  count: number\n  picture: string\n}\n\ntype InitialStateType = {\n  products: ProductType[];\n}\n\nconst initialState = {\n  products: []\n}\nconst mainReducer = ({ products }, action) => ({\n  products: productReducer(products, action),\n});\n\n\nexport const userContext = createContext<{\n  state: InitialStateType;\n  dispatch: React.Dispatch<any>;\n}>({\n  state: initialState,\n  dispatch: () => null\n});\n\n\n\nconst Routing = (props) => {\n  const { state, dispatch } = useContext(userContext)\n\n  useEffect(() => {\n\n  }, [])\n\n\n  return (\n    <Switch>\n      <Route exact path=\"/\" >\n        <Home />\n      </Route>\n\n      <Route exact path=\"/product/:productid\" >\n        <Product />\n      </Route>\n\n      <Route exact path=\"/cart\" >\n        <Cart />\n      </Route>\n\n    </Switch>\n  )\n}\n\n\nfunction App() {\n  const [state, dispatch] = useReducer(mainReducer, initialState);\n  return (\n\n    <userContext.Provider value={{ state, dispatch }}>\n      <BrowserRouter>\n        <NavBar />\n        <Routing />\n      </BrowserRouter>\n    </userContext.Provider>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}